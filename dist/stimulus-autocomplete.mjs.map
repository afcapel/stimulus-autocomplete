{"version":3,"file":"stimulus-autocomplete.mjs","sources":["../src/autocomplete.mjs"],"sourcesContent":["import { Controller } from 'stimulus'\nimport debounce from 'lodash.debounce'\n\nexport default class extends Controller {\n  static targets = [ 'input', 'hidden', 'results', 'clear' ]\n\n  connect() {\n    this.resultsTarget.hidden = true\n\n    this.inputTarget.setAttribute('autocomplete', 'off')\n    this.inputTarget.setAttribute('spellcheck', 'false')\n\n    this.mouseDown = false\n\n    this.onInputChange = debounce(this.onInputChange.bind(this), 300)\n    this.onResultsClick = this.onResultsClick.bind(this)\n    this.onResultsMouseDown = this.onResultsMouseDown.bind(this)\n    this.onInputBlur = this.onInputBlur.bind(this)\n    this.onKeydown = this.onKeydown.bind(this)\n\n    this.inputTarget.addEventListener('keydown', this.onKeydown)\n    this.inputTarget.addEventListener('blur', this.onInputBlur)\n    this.inputTarget.addEventListener('input', this.onInputChange)\n    this.resultsTarget.addEventListener('mousedown', this.onResultsMouseDown)\n    this.resultsTarget.addEventListener('click', this.onResultsClick)\n\n    if (this.hasClearTarget) {\n      this.onClearClick = this.onClearClick.bind(this)\n      this.clearTarget.addEventListener('click', this.onClearClick)\n    }\n  }\n\n  disconnect() {\n    this.inputTarget.removeEventListener('keydown', this.onKeydown)\n    this.inputTarget.removeEventListener('focus', this.onInputFocus)\n    this.inputTarget.removeEventListener('blur', this.onInputBlur)\n    this.inputTarget.removeEventListener('input', this.onInputChange)\n    this.resultsTarget.removeEventListener('mousedown', this.onResultsMouseDown)\n    this.resultsTarget.removeEventListener('click', this.onResultsClick)\n\n    if (this.hasClearTarget) {\n      this.clearTarget.removeEventListener('click', this.onClearClick)\n    }\n  }\n\n  sibling(next) {\n    const options = Array.from(this.resultsTarget.querySelectorAll('[role=\"option\"]'))\n    const selected = this.resultsTarget.querySelector('[aria-selected=\"true\"]')\n    const index = options.indexOf(selected)\n    const sibling = next ? options[index + 1] : options[index - 1]\n    const def = next ? options[0] : options[options.length - 1]\n    return sibling || def\n  }\n\n  select(target) {\n    for (const el of this.resultsTarget.querySelectorAll('[aria-selected=\"true\"]')) {\n      el.removeAttribute('aria-selected')\n      el.classList.remove('active')\n    }\n    target.setAttribute('aria-selected', 'true')\n    target.classList.add('active')\n    this.inputTarget.setAttribute('aria-activedescendant', target.id)\n  }\n\n  onKeydown(event) {\n    switch (event.key) {\n      case 'Escape':\n        if (!this.resultsTarget.hidden) {\n          this.hideAndRemoveOptions()\n          event.stopPropagation()\n          event.preventDefault()\n        }\n        break\n      case 'ArrowDown':\n        {\n          const item = this.sibling(true)\n          if (item) this.select(item)\n          event.preventDefault()\n        }\n        break\n      case 'ArrowUp':\n        {\n          const item = this.sibling(false)\n          if (item) this.select(item)\n          event.preventDefault()\n        }\n        break\n      case 'Tab':\n        {\n          const selected = this.resultsTarget.querySelector('[aria-selected=\"true\"]')\n          if (selected) {\n            this.commit(selected)\n          }\n        }\n        break\n      case 'Enter':\n        {\n          const selected = this.resultsTarget.querySelector('[aria-selected=\"true\"]')\n          if (selected && !this.resultsTarget.hidden) {\n            this.commit(selected)\n            event.preventDefault()\n          }\n        }\n        break\n    }\n  }\n\n  onInputBlur() {\n    if (this.mouseDown) return\n    this.resultsTarget.hidden = true\n  }\n\n  commit(selected) {\n    if (selected.getAttribute('aria-disabled') === 'true') return\n\n    if (selected instanceof HTMLAnchorElement) {\n      selected.click()\n      this.resultsTarget.hidden = true\n      return\n    }\n\n    const textValue = selected.textContent.trim()\n    const value = selected.getAttribute('data-autocomplete-value') || textValue\n    this.inputTarget.value = textValue\n\n    if ( this.hasHiddenTarget ) {\n      this.hiddenTarget.value = value\n    } else {\n      this.inputTarget.value = value\n    }\n\n    this.inputTarget.focus()\n    this.hideAndRemoveOptions()\n\n    this.element.dispatchEvent(new CustomEvent('autocomplete.change', {\n      bubbles: true,\n      detail: { value: value, textValue: textValue }\n    }))\n  }\n\n  onResultsClick(event) {\n    if (!(event.target instanceof Element)) return\n    const selected = event.target.closest('[role=\"option\"]')\n    if (selected) this.commit(selected)\n  }\n\n  onClearClick(event) {\n    event.preventDefault()\n    if ( this.hasHiddenTarget ) {\n      this.hiddenTarget.value = ''\n    }\n\n    this.inputTarget.value = ''\n\n    this.inputTarget.focus()\n  }\n\n  onResultsMouseDown() {\n    this.mouseDown = true\n    this.resultsTarget.addEventListener('mouseup', () => (this.mouseDown = false), {once: true})\n  }\n\n  onInputChange() {\n    this.element.removeAttribute('value')\n    this.fetchResults()\n  }\n\n  identifyOptions() {\n    let id = 0\n    for (const el of this.resultsTarget.querySelectorAll('[role=\"option\"]:not([id])')) {\n      el.id = `${this.resultsTarget.id}-option-${id++}`\n    }\n  }\n\n  hideAndRemoveOptions() {\n    this.resultsTarget.hidden = true\n    this.resultsTarget.innerHTML = null\n  }\n\n  fetchResults() {\n    const query = this.inputTarget.value.trim()\n    if (!query || query.length < this.minLength) {\n      this.hideAndRemoveOptions()\n      return\n    }\n\n    if (!this.src) return\n\n    const url = new URL(this.src, window.location.href)\n    const params = new URLSearchParams(url.search.slice(1))\n    params.append('q', query)\n    url.search = params.toString()\n\n    this.element.dispatchEvent(new CustomEvent('loadstart'))\n\n    fetch(url.toString())\n      .then(response => response.text())\n      .then(html => {\n        this.resultsTarget.innerHTML = html\n        this.identifyOptions()\n        const hasResults = !!this.resultsTarget.querySelector('[role=\"option\"]')\n        this.resultsTarget.hidden = !hasResults\n        this.element.dispatchEvent(new CustomEvent('load'))\n        this.element.dispatchEvent(new CustomEvent('loadend'))\n      })\n      .catch(() => {\n        this.element.dispatchEvent(new CustomEvent('error'))\n        this.element.dispatchEvent(new CustomEvent('loadend'))\n      })\n  }\n\n  open() {\n    if (!this.resultsTarget.hidden) return\n    this.resultsTarget.hidden = false\n    this.element.setAttribute('aria-expanded', 'true')\n    this.element.dispatchEvent(new CustomEvent('toggle', {detail: {input: this.input, results: this.results}}))\n  }\n\n  close() {\n    if (this.resultsTarget.hidden) return\n    this.resultsTarget.hidden = true\n    this.inputTarget.removeAttribute('aria-activedescendant')\n    this.element.setAttribute('aria-expanded', 'false')\n    this.element.dispatchEvent(new CustomEvent('toggle', {detail: {input: this.input, results: this.results}}))\n  }\n\n  get src() {\n    return this.data.get(\"url\")\n  }\n\n  get minLength() {\n    const minLength = this.data.get(\"min-length\")\n    if ( !minLength ) {\n      return 0\n    }\n    return parseInt(minLength, 10)\n  }\n}\n"],"names":["connect","resultsTarget","hidden","inputTarget","setAttribute","mouseDown","onInputChange","debounce","this","bind","onResultsClick","onResultsMouseDown","onInputBlur","onKeydown","addEventListener","hasClearTarget","onClearClick","clearTarget","disconnect","removeEventListener","onInputFocus","sibling","next","options","Array","from","querySelectorAll","selected","querySelector","index","indexOf","length","select","target","const","el","removeAttribute","classList","remove","add","id","event","key","hideAndRemoveOptions","stopPropagation","preventDefault","item","commit","getAttribute","HTMLAnchorElement","click","textValue","textContent","trim","value","hasHiddenTarget","hiddenTarget","focus","element","dispatchEvent","CustomEvent","bubbles","detail","Element","closest","once","fetchResults","identifyOptions","innerHTML","query","minLength","src","url","URL","window","location","href","params","URLSearchParams","search","slice","append","toString","fetch","then","response","text","html","hasResults","catch","open","input","results","close","data","get","parseInt","Controller","targets"],"mappings":"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"}